const { createClient } = require('@sanity/client');

const client = createClient({
  projectId: '72m8vhy2',
  dataset: 'production',
  useCdn: false,
  apiVersion: '2024-01-01',
  token: process.env.SANITY_API_TOKEN,
  perspective: 'published'
});

async function checkExistingPosts() {
  try {
    console.log('üîç SanityÂÜÖ„ÅÆÊó¢Â≠òË®ò‰∫ã„ÇíÁ¢∫Ë™ç‰∏≠...\n');
    
    const posts = await client.fetch(`
      *[_type == "post"] | order(_createdAt desc) {
        _id,
        title,
        slug,
        body,
        publishedAt,
        _createdAt,
        "hasSlug": defined(slug.current),
        "hasBody": defined(body),
        "bodyLength": length(body)
      }
    `);
    
    console.log(`üìä Á∑èË®ò‰∫ãÊï∞: ${posts.length}\n`);
    
    // Áµ±Ë®àÊÉÖÂ†±
    const withSlug = posts.filter(p => p.hasSlug).length;
    const withBody = posts.filter(p => p.hasBody).length;
    const withoutSlug = posts.filter(p => !p.hasSlug).length;
    const withoutBody = posts.filter(p => !p.hasBody).length;
    
    console.log('üìà Áµ±Ë®àÊÉÖÂ†±:');
    console.log(`‚úÖ slug„ÅÇ„Çä: ${withSlug}Ë®ò‰∫ã`);
    console.log(`‚ùå slug„Å™„Åó: ${withoutSlug}Ë®ò‰∫ã`);
    console.log(`‚úÖ body„ÅÇ„Çä: ${withBody}Ë®ò‰∫ã`);
    console.log(`‚ùå body„Å™„Åó: ${withoutBody}Ë®ò‰∫ã\n`);
    
    // ÊúÄÂàù„ÅÆ10Ë®ò‰∫ã„ÅÆË©≥Á¥∞
    console.log('üìù ÊúÄÂàù„ÅÆ10Ë®ò‰∫ã„ÅÆË©≥Á¥∞:');
    posts.slice(0, 10).forEach((post, index) => {
      console.log(`${index + 1}. "${post.title}"`);
      console.log(`   slug: ${post.hasSlug ? '‚úÖ' : '‚ùå'} ${post.slug?.current || '„Å™„Åó'}`);
      console.log(`   body: ${post.hasBody ? '‚úÖ' : '‚ùå'} ${post.bodyLength ? `(${post.bodyLength}„Éñ„É≠„ÉÉ„ÇØ)` : '„Å™„Åó'}`);
      console.log(`   ‰ΩúÊàêÊó•: ${new Date(post._createdAt).toLocaleDateString('ja-JP')}\n`);
    });
    
    // slug/body„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„ÇãË®ò‰∫ã„ÅÆ„É™„Çπ„Éà
    if (withoutSlug > 0 || withoutBody > 0) {
      console.log('üö® ÂØæÂøú„ÅåÂøÖË¶Å„Å™Ë®ò‰∫ã:');
      
      if (withoutSlug > 0) {
        console.log(`\nüìå slug„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„ÇãË®ò‰∫ã (${withoutSlug}‰ª∂):`);
        posts.filter(p => !p.hasSlug).slice(0, 5).forEach((post, index) => {
          console.log(`${index + 1}. "${post.title}"`);
        });
        if (withoutSlug > 5) console.log(`   ...‰ªñ${withoutSlug - 5}‰ª∂`);
      }
      
      if (withoutBody > 0) {
        console.log(`\nüìå body„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„ÇãË®ò‰∫ã (${withoutBody}‰ª∂):`);
        posts.filter(p => !p.hasBody).slice(0, 5).forEach((post, index) => {
          console.log(`${index + 1}. "${post.title}"`);
        });
        if (withoutBody > 5) console.log(`   ...‰ªñ${withoutBody - 5}‰ª∂`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error.message);
  }
}

checkExistingPosts();