name: Daily Article Maintenance Check

on:
  schedule:
    # 毎週月曜 AM3:00 (JST) = 日曜 PM6:00 (UTC) に実行（記事生成の1時間後）
    - cron: '0 18 * * 0'
  workflow_dispatch: # 手動実行も可能にする

jobs:
  maintenance_check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run maintenance script - All checks and auto-fix
        env:
          SANITY_API_TOKEN: ${{ secrets.SANITY_WRITE_TOKEN }}
          SANITY_WRITE_TOKEN: ${{ secrets.SANITY_WRITE_TOKEN }}
        run: |
          echo "=== 総合メンテナンス開始（検出＋自動修正） ==="
          node scripts/maintenance.js all

      - name: Create issue if problems found
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const date = new Date().toLocaleDateString('ja-JP', { timeZone: 'Asia/Tokyo' });

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `[メンテナンス] 記事品質チェックで問題を検出 (${date})`,
              body: `## 記事品質チェック結果\n\n定期メンテナンスチェックで問題が検出されました。\n\n詳細はワークフローログを確認してください:\n${context.payload.repository.html_url}/actions/runs/${context.runId}\n\n---\n**実行時刻**: ${date}\n**チェック項目**:\n- 必須フィールド (Slug, Categories)\n- SEO (Meta Description: 120-160文字)\n- 推奨フィールド (Tags, Excerpt)\n- 文字数 (推奨2000文字以上)\n- 次のステップセクション`,
              labels: ['maintenance', 'article-quality']
            });

      - name: Post summary
        if: always()
        run: |
          echo "✅ メンテナンスチェック完了"
          echo "📊 実行時刻: $(TZ=Asia/Tokyo date '+%Y年%m月%d日 %H:%M')"
